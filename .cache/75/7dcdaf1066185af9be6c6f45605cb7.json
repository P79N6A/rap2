{"id":"node_modules/@alife/hippo/lib/util/func.js","dependencies":[{"name":"/Users/zhaokonglei/hema_xiangmu/rap2/package.json","includedInParent":true,"mtime":1542814824118},{"name":"/Users/zhaokonglei/hema_xiangmu/rap2/.babelrc","includedInParent":true,"mtime":1540907816068},{"name":"/Users/zhaokonglei/hema_xiangmu/rap2/node_modules/@alife/hippo/package.json","includedInParent":true,"mtime":1544439915559},{"name":"./object","loc":{"line":9,"column":22},"parent":"/Users/zhaokonglei/hema_xiangmu/rap2/node_modules/@alife/hippo/lib/util/func.js","resolved":"/Users/zhaokonglei/hema_xiangmu/rap2/node_modules/@alife/hippo/lib/util/object.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.noop = undefined;\nexports.makeChain = makeChain;\nexports.bindCtx = bindCtx;\nexports.promiseCall = promiseCall;\n\nvar _object = require('./object');\n\n/**\n * 函数相关的操作处理方法\n * @author Fusion Team<http://next.alibaba-inc.com>\n * @create 2017/09/11\n * @exports\n * <Function> noop, makeChain, bindCtx,\n */\n\n/**\n * 一个空方法，返回入参本身或空对象\n */\nvar noop = exports.noop = function noop() {};\n\n/**\n * 将N个方法合并为一个链式调用的方法\n * @return {Function}     合并后的方法\n * 参考 https://github.com/react-component/util/\n *\n * @example\n * func.makeChain(this.handleChange, this.props.onChange);\n */\nfunction makeChain() {\n    for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n        fns[_key] = arguments[_key];\n    }\n\n    if (fns.length === 1) {\n        return fns[0];\n    }\n\n    return function chainedFunction() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n        }\n\n        for (var i = 0, j = fns.length; i < j; i++) {\n            if (fns[i] && fns[i].apply) {\n                fns[i].apply(this, args);\n            }\n        }\n    };\n}\n\n/**\n * 批量改变方法的上下文\n * 此方法在react组件中很有用，在constructor中批量将组件上的方法执行上下文绑定到组件本身\n * 注意：用bind改变函数运行的上下文只会生效一次\n * @param  {Object} ctx 方法挂载的对象以及执行的上下文\n * @param  {Array<String>} fns 方法名列表\n *\n * @example\n * func.bindCtx(this, ['handleClick', 'handleChange']);\n */\nfunction bindCtx(ctx, fns, ns) {\n    if (typeof fns === 'string') {\n        fns = [fns];\n    }\n\n    // 方法的挂载空间，如果不传，默认与ctx相同\n    ns = ns || ctx;\n\n    fns.forEach(function (fnName) {\n        // 这里不要添加空方法判断，由调用者保证正确性，否则出了问题无法排查\n        ns[fnName] = ns[fnName].bind(ctx);\n    });\n}\n\n/**\n * 用于执行回调方法后的逻辑\n * @param  {*} ret            回调方法执行结果\n * @param  {Function} success 执行结果返回非false的回调\n * @param  {Function} [failure=noop] 执行结果返回false的回调\n */\nfunction promiseCall(ret, success) {\n    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n    if ((0, _object.isPromise)(ret)) {\n        return ret.then(function (result) {\n            success(result);\n            return result;\n        }).catch(function (e) {\n            failure(e);\n            // throw e;\n        });\n    }\n\n    return ret !== false ? success(ret) : failure(ret);\n}","map":{"mappings":[{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@alife/hippo/lib/util/func.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}}],"sources":{"node_modules/@alife/hippo/lib/util/func.js":"'use strict';\n\nexports.__esModule = true;\nexports.noop = undefined;\nexports.makeChain = makeChain;\nexports.bindCtx = bindCtx;\nexports.promiseCall = promiseCall;\n\nvar _object = require('./object');\n\n/**\n * 函数相关的操作处理方法\n * @author Fusion Team<http://next.alibaba-inc.com>\n * @create 2017/09/11\n * @exports\n * <Function> noop, makeChain, bindCtx,\n */\n\n/**\n * 一个空方法，返回入参本身或空对象\n */\nvar noop = exports.noop = function noop() {};\n\n/**\n * 将N个方法合并为一个链式调用的方法\n * @return {Function}     合并后的方法\n * 参考 https://github.com/react-component/util/\n *\n * @example\n * func.makeChain(this.handleChange, this.props.onChange);\n */\nfunction makeChain() {\n    for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n        fns[_key] = arguments[_key];\n    }\n\n    if (fns.length === 1) {\n        return fns[0];\n    }\n\n    return function chainedFunction() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n        }\n\n        for (var i = 0, j = fns.length; i < j; i++) {\n            if (fns[i] && fns[i].apply) {\n                fns[i].apply(this, args);\n            }\n        }\n    };\n}\n\n/**\n * 批量改变方法的上下文\n * 此方法在react组件中很有用，在constructor中批量将组件上的方法执行上下文绑定到组件本身\n * 注意：用bind改变函数运行的上下文只会生效一次\n * @param  {Object} ctx 方法挂载的对象以及执行的上下文\n * @param  {Array<String>} fns 方法名列表\n *\n * @example\n * func.bindCtx(this, ['handleClick', 'handleChange']);\n */\nfunction bindCtx(ctx, fns, ns) {\n    if (typeof fns === 'string') {\n        fns = [fns];\n    }\n\n    // 方法的挂载空间，如果不传，默认与ctx相同\n    ns = ns || ctx;\n\n    fns.forEach(function (fnName) {\n        // 这里不要添加空方法判断，由调用者保证正确性，否则出了问题无法排查\n        ns[fnName] = ns[fnName].bind(ctx);\n    });\n}\n\n/**\n * 用于执行回调方法后的逻辑\n * @param  {*} ret            回调方法执行结果\n * @param  {Function} success 执行结果返回非false的回调\n * @param  {Function} [failure=noop] 执行结果返回false的回调\n */\nfunction promiseCall(ret, success) {\n    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n    if ((0, _object.isPromise)(ret)) {\n        return ret.then(function (result) {\n            success(result);\n            return result;\n        }).catch(function (e) {\n            failure(e);\n            // throw e;\n        });\n    }\n\n    return ret !== false ? success(ret) : failure(ret);\n}"},"lineCount":98}},"hash":"5dfe61371568219e5bc5269a457d9287","cacheData":{"env":{}}}