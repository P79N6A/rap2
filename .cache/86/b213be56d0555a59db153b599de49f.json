{"id":"node_modules/@alife/hippo/lib/elevator/utils/index.js","dependencies":[{"name":"/Users/zhaokonglei/hema_xiangmu/rap2/package.json","includedInParent":true,"mtime":1542814824118},{"name":"/Users/zhaokonglei/hema_xiangmu/rap2/.babelrc","includedInParent":true,"mtime":1540907816068},{"name":"/Users/zhaokonglei/hema_xiangmu/rap2/node_modules/@alife/hippo/package.json","includedInParent":true,"mtime":1544439915559}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n/**\n * 判断一个对象是不为null和undefined\n * @param  {object}  value - 需要被判断的对象\n * @return {Boolean}       如果为null或者undefined返回false，反之则是true\n */\nvar isNotEmpty = exports.isNotEmpty = function isNotEmpty(value) {\n  return value !== undefined && value !== null;\n};\n\n/**\n * deep clone a object to another object\n * @param       {object} json - 需要进行深拷贝的对象\n * @return      {object}      返回的深拷贝的对象\n */\nvar deepClone = exports.deepClone = function deepClone(json) {\n  return JSON.parse(JSON.stringify(json));\n};","map":{"mappings":[{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@alife/hippo/lib/elevator/utils/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"node_modules/@alife/hippo/lib/elevator/utils/index.js":"\"use strict\";\n\nexports.__esModule = true;\n/**\n * 判断一个对象是不为null和undefined\n * @param  {object}  value - 需要被判断的对象\n * @return {Boolean}       如果为null或者undefined返回false，反之则是true\n */\nvar isNotEmpty = exports.isNotEmpty = function isNotEmpty(value) {\n  return value !== undefined && value !== null;\n};\n\n/**\n * deep clone a object to another object\n * @param       {object} json - 需要进行深拷贝的对象\n * @return      {object}      返回的深拷贝的对象\n */\nvar deepClone = exports.deepClone = function deepClone(json) {\n  return JSON.parse(JSON.stringify(json));\n};"},"lineCount":20}},"hash":"acafa46281bd0d670168b5102836e286","cacheData":{"env":{}}}